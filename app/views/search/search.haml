-content_for :title do
  #{@search.term} -
.row
  #search-bar
    =render partial: 'search_bar', locals: {searched: @search.term, disabled: !@search.errors.empty?, logo: true}
.row
-unless @search.errors.empty?
  -@search.errors.each do |err|
    .row.col-md-12.error=err
-else
  .row
    .col-xs-7.col-xs-offset-1
      %p.muted#totals
        = t('search.around')
        = t('search.results_count', count: number_with_precision(@search.total, delimiter: ',', significant: true, precision: 5, strip_insignificant_zeros: true, separator: '.') )
      .row
        #instant_results.col-md-8{style: "display: #{(@instant || @instant_matches.nil? || @instant_matches.empty? )? "none" : "block"}"}
          -unless @instant
            -@instant_matches.each do |e|
              -method = e[:method]
              -type = e[:type]
              .instant-result
                %h4=e[:name]
                %hr/
                %dl{class: type}
                  -e[:data].each do |k,v|
                    -value = k.downcase
                    - if(method == "upper")
                      - value = value.upcase();
                    -elsif(method == "title")
                      - value = value.titleize();
                    %dt= value
                    %dd= v
                - if e[:link]
                  %p= e[:link].html_safe
                %br/
      -if @ads.present?
        =render partial: 'ad', locals: {ad: @ads[0], search: true, inline: true}
      .search-results
        -@search.records.each do |page|
          =render partial: 'page', locals: {page: page}
        .span9
          =will_paginate @search

    .col-xs-4{style: 'margin-top: 20px'}
      .row.col-xs-12
        =t('search.try_this_on')
        %ul.unstyled
          %li=link_to "Amazon", root_path(q: "@amazon #{@search.term}")
        %hr{style: 'margin: 10px 0'}
      -unless @ads.nil? || @ads.empty? || @ads.count < 2
        - @ads[1..-1].each do |ad|
          =render partial: 'ad', locals: {ad: ad, search: true}
  -content_for :javascripts do
    :javascript
      var search = "#{CGI::escape @search.term.gsub(/\s+/, '+')}";
      var keep_space = false; // One day It'll be #{@search.term.split(/s+/).count <= 2}!
      $(document).ready(function(){
        $('.page-url').on('mousedown', function(e){
          target = $(e.target)[0]
          href = target.getAttribute('href')
          target.setAttribute('href','/r?s=#{@search_id}&p='+href)
        });
      })

    :javascript
      $(document).ready(function(){
        paginated = #{@paginated};
        if (!paginated){
          if(keep_space){
            $('#instant_results').show()
          }
          $.getJSON("#{instant_path}?search="+search, null,function(res){
            if(res['matches'] != null && res['matches'].length > 0) {
              matches = res['matches'];
              $.each(matches, function(k,e){
                str =  "<div class='instant-result'><h4>"+e.name+"</h4><hr/><dl class='"+e.type+"'>"
                method = e.method
                if(method == null){
                  method = "title";
                }
                $.each(e.data, function(k,v){
                  value = k.toLowerCase();
                  if(method == "upper"){
                    value = value.toUpperCase();
                  } else if(method == "title"){
                    value = value.titleize();
                  }
                  str += "<dt>"+value+"</dt>";
                  str += "<dd>"+v+"</dd>";
                });
                str += "</dl>"
                if(e.link != undefined){
                  str += "<p>"+e.link+"</p>"
                }
                str += "</div><br />";
                $('#instant_results').append(str);
              });
              $('#instant_results').show();
            } else {
            $('#instant_results').hide();
            }
          }).fail(function(){ $('#instant_results').hide(); });
        }
      })